version: 2
jobs:
  build:
    machine: true
    working_directory: ~/.go_workspace/src/github.com/sensu/sensu-operator
    steps:
      - checkout
      - run:
          name: Setup host
          environment:
            K8S_VERSION: v1.10.0
            MINIKUBE_VERSION: v0.28.2
            CHANGE_MINIKUBE_NONE_USER: true
          command: |
            curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
            curl -Lo minikube https://github.com/kubernetes/minikube/releases/download/${MINIKUBE_VERSION}/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
            curl -Lo mc https://dl.minio.io/client/mc/release/linux-amd64/mc && chmod +x mc && sudo mv mc /usr/local/bin/
            sudo minikube config set WantReportErrorPrompt false
            # Install Go 1.10 to avoid error from `go test`: `can't load package: package github.com/sensu/sensu-operator: no Go files in ...`
            curl -Lo go.tgz https://dl.google.com/go/go1.10.3.linux-amd64.tar.gz
            sudo rm -rf /usr/local/go/*
            sudo tar -C /usr/local/ -xf go.tgz
            # Avoid an error `linux mounts: path /etc/kubernetes is mounted on / but it is not a shared or slave mount`
            sudo mount --make-shared /
            # TODO: remove the --bootstrapper flag once this issue is solved: https://github.com/kubernetes/minikube/issues/2704
            sudo -E minikube start --vm-driver=none --memory=3072 --kubernetes-version=${K8S_VERSION} --extra-config=apiserver.Authorization.Mode=RBAC --extra-config=controller-manager.cluster-cidr=192.168.0.0/16 --extra-config=controller-manager.allocate-node-cidrs=true --network-plugin=cni --extra-config=kubelet.network-plugin=cni
      - run:
          name: Wait for kubernetes to be ready
          command: |
            JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'
            until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do
              sleep 1
            done
      - run:
          name: Install calico plugin
          command: |
            kubectl apply -f https://docs.projectcalico.org/v3.1/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml
            kubectl apply -f https://docs.projectcalico.org/v3.1/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml
      - run:
          name: Build operator
          command: |
            make build
            make container IMAGE=sensu/sensu-operator:test
      - run:
          name: Setup RBAC for kube-dns
          command: |
            kubectl create clusterrolebinding cluster-admin:kube-system --clusterrole=cluster-admin --serviceaccount=kube-system:default
      - run:
          name: Setup RBAC for operator
          command: |
            ./example/rbac/create-role
      - run:
          name: Setup S3 environment
          command: |
            mkdir -p s3creds
            cat <<EOF >s3creds/credentials
            [default]
            aws_access_key_id = admin
            aws_secret_access_key = password
            EOF
            cat <<EOF >s3creds/config
            [default]
            region = eu-central-1
            host_base = minio-service.default.svc.cluster.local:9000
            use_https = False
            EOF
            kubectl create secret generic sensu-backups-aws-secret --from-file s3creds/credentials --from-file s3creds/config
            kubectl apply -f .circleci/minio-deployment.yml
            until kubectl rollout status deploy minio-deployment; do sleep 1; done
            until nc -z $(minikube ip) 31234; do sleep 1; done
            until mc config host add minio http://$(minikube ip):31234 admin password; do sleep 1; done
            mc mb minio/sensu-backup-test
      - run:
          name: Run e2e tests
          command: |
            export SENSU_API_URL="http://127.0.0.1:31180"
            KUBECONFIG=~/.kube/config \
            OPERATOR_IMAGE=sensu/sensu-operator:test \
            TEST_NAMESPACE=default \
            TEST_AWS_SECRET=sensu-backups-aws-secret \
            TEST_S3_BUCKET=sensu-backup-test \
            ./hack/test
